#!/bin/bash
# Run tests and code quality checks

# Set colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}Running tests and code quality checks${NC}"
echo ""

# Check if Python is installed
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}Python 3 is not installed. Please install Python 3 first.${NC}"
    exit 1
fi

# Check for virtual environment
if [ ! -d "venv" ]; then
    echo -e "${YELLOW}Virtual environment not found. Creating...${NC}"
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
else
    source venv/bin/activate
fi

# Install test dependencies if not already installed
pip install pytest black pylint pytest-cov

# Run code formatting check with Black
echo -e "${GREEN}Checking code formatting with Black...${NC}"
black --check .
if [ $? -eq 0 ]; then
    echo -e "${GREEN}✓ Code formatting check passed${NC}"
else
    echo -e "${YELLOW}Code formatting issues found. Running Black to fix...${NC}"
    black .
    echo -e "${YELLOW}Code reformatted. Please review changes.${NC}"
fi

# Run linting with pylint
echo -e "${GREEN}Running pylint...${NC}"
pylint --disable=C0111,C0103,C0303,W1201,W1202 *.py
if [ $? -eq 0 ]; then
    echo -e "${GREEN}✓ Pylint check passed${NC}"
else
    echo -e "${YELLOW}Pylint found issues. Please review them.${NC}"
fi

# Run unit tests with pytest
echo -e "${GREEN}Running unit tests...${NC}"
pytest tests/ -v
if [ $? -eq 0 ]; then
    echo -e "${GREEN}✓ All tests passed${NC}"
else
    echo -e "${RED}Some tests failed. Please check the output above.${NC}"
    exit 1
fi

# Run tests with coverage
echo -e "${GREEN}Running tests with coverage...${NC}"
pytest --cov=. tests/
echo ""

echo -e "${GREEN}All checks completed!${NC}"
